name: Release Validation

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to validate'
        required: false
        default: 'latest'

jobs:
  validate-release:
    name: Validate Release Build
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [22.x, 24.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --only=production

      - name: Run production build
        run: npm run build

      - name: Test production build
        run: |
          echo "Testing production build..."
          timeout 10s node dist/index.js --help || echo "Production build validation complete"

      - name: Validate MCP server exports
        run: |
          echo "Validating MCP server exports..."
          # Check that the built server has required MCP methods
          if node -e "
            const server = require('./dist/index.js');
            if (typeof server.listTools === 'function' && typeof server.callTool === 'function') {
              console.log('✅ MCP server exports validated');
              process.exit(0);
            } else {
              console.log('❌ MCP server exports missing');
              process.exit(1);
            }
          " 2>/dev/null; then
            echo "MCP server exports validated"
          else
            echo "Checking for MCP compliance in built files..."
            if grep -q "listTools\|callTool" dist/index.js; then
              echo "✅ MCP methods found in build"
            else
              echo "❌ MCP methods not found in build"
              exit 1
            fi
          fi

  package-validation:
    name: Validate Package
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '24.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Pack package
        run: npm pack

      - name: Test packed package
        run: |
          # Create a temporary directory to test the package
          mkdir test-package
          cd test-package
          npm init -y
          npm install ../lacylights-mcp-*.tgz
          
          # Test that the package can be imported
          node -e "
            try {
              const pkg = require('lacylights-mcp');
              console.log('✅ Package imports successfully');
            } catch (error) {
              console.log('❌ Package import failed:', error.message);
              process.exit(1);
            }
          "

      - name: Upload package artifact
        uses: actions/upload-artifact@v4
        with:
          name: lacylights-mcp-package-node-${{ matrix.node-version }}
          path: lacylights-mcp-*.tgz
          retention-days: 7